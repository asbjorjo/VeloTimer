// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeloTimerWeb.Server.Data;

namespace VeloTimerWeb.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VeloTimer.Shared.Models.Passing", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<long>("TransponderId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoopId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Time", "TransponderId", "LoopId");

                    b.HasIndex("LoopId");

                    b.HasIndex("TransponderId");

                    b.ToTable("Passings");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.TimingLoop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<long>("LoopId")
                        .HasColumnType("bigint");

                    b.Property<long>("TrackId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("TimingLoops");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.Track", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.Transponder", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transponders");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.Passing", b =>
                {
                    b.HasOne("VeloTimer.Shared.Models.TimingLoop", "Loop")
                        .WithMany("Passings")
                        .HasForeignKey("LoopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeloTimer.Shared.Models.Transponder", "Transponder")
                        .WithMany("Passings")
                        .HasForeignKey("TransponderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loop");

                    b.Navigation("Transponder");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.TimingLoop", b =>
                {
                    b.HasOne("VeloTimer.Shared.Models.Track", "Track")
                        .WithMany("TimingLoops")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.TimingLoop", b =>
                {
                    b.Navigation("Passings");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.Track", b =>
                {
                    b.Navigation("TimingLoops");
                });

            modelBuilder.Entity("VeloTimer.Shared.Models.Transponder", b =>
                {
                    b.Navigation("Passings");
                });
#pragma warning restore 612, 618
        }
    }
}
