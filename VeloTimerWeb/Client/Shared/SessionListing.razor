@namespace VeloTimerWeb.Client.Shared
@inherits ComponentBase
@inject IApiClient Api

<MudPaper>
@Session.Start -- @Session.End<br/>
@foreach(var best in bests)
{
    <MudPaper>
        @best.Key -- @best.Value.Time<br/>
    </MudPaper>
}
</MudPaper>

@code {
    [Parameter]
    public SessionWeb Session { get; set; }

    private List<string> distances = new List<string>{ "runde", "200m", "1000m", "4000m" };

    private Dictionary<string, SegmentTime> bests;

    protected async override Task OnParametersSetAsync()
    {
        bests = new();

        foreach (var distance in distances)
        {
            var time = await Api.GetBestTimes(distance, Session.Start, Session.End, 1, Session.Activity.Rider.UserId);
            if (time.Count() > 0)
                bests.TryAdd(distance, time.First());
        }
    }
}
