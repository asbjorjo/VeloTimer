@using System.Text
@using VeloTimer.Shared.Hub
@using VeloTimer.Shared.Models
@using VeloTimer.Shared.Util

@inherits ComponentBase
@inject IApiClient Api
@inject NavigationManager NavigationManager
@inject HubConnection hubConnection

<MudPaper>
    @if(last == null) {
        <MudSkeleton />
    }
    else
    {
        <MudText>Siste registrerte passering var @(GetText()) siden.</MudText>
    }
</MudPaper>

@code {
    private PassingWeb last;

    protected async override Task OnInitializedAsync()
    {
        await LoadLastPassing();
    }

    protected string GetText()
    {
        var since = DateTimeOffset.Now - last.Time;

        var value = new StringBuilder();

        if (since.Hours > 0)
        {
            value.Append(since.Hours);
            value.Append(" time");
            if (since.Hours >1)
            {
                value.Append("r");
            }
            value.Append(" og ");
        }
        value.Append(since.Minutes);
        value.Append(" minutt");
        if (since.Minutes > 1)
        {
            value.Append("er");

        }

        return value.ToString();
    }

    protected async Task LoadLastPassing()
    {
        last = await Api.GetLastPassing();
    }
}
