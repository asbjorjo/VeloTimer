@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudIconButton Icon="@Icons.Filled.Home" Color="Color.Inherit" Link="#" />
        <MudText Typo="Typo.h5" Class="ml-3">VeloTime</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="@Icons.Filled.AccountCircle" Color="Color.Inherit" Link="/authentication/profile" />
                <MudIconButton Icon="@Icons.Filled.Logout" Color="Color.Inherit" OnClick="@BeginSignOut" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Inherit" Link="/authentication/login" />
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Variant="@DrawerVariant.Responsive" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code{
    bool _drawerOpen = false;

    void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
