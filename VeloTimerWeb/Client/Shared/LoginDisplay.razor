@namespace VeloTimerWeb.Client.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
    
@inject IApiClient Api
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hei, @(username ?? "")!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Logg ut</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Registrer</a>
        <a href="authentication/login">Logg inn</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private string username;

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            username = (await Api.GetRiderByUserId(user.FindFirst(c => c.Type == "sub")?.Value)).DisplayName;
        }
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
