@namespace VeloTimerWeb.Client.Shared
@using VeloTimer.Shared.Hub
@using VeloTimer.Shared.Util

@inject IApiClient Api
@inject ISnackbar SnackBar
@inject HttpClient Http

@if(!activeTransponder)
{
    <MudPaper>
        <MudLink Href="/rider/transponders">Ingen aktiv brikke!</MudLink>
    </MudPaper>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    [CascadingParameter(Name = "ActiveTransponder")]
    private bool activeTransponder { get; set; } 
    private string userId;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (!activeTransponder)
        {
            SnackBar.Add("Ingen aktiv brikke!", Severity.Error);
        }
    }
}