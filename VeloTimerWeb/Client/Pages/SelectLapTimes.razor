@page "/segmenttimes/{SegmentId:long?}"
@layout MainLayout
@using VeloTimer.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Passeringstider</h3>

@if (segments == null)
{
    <p>Laster...</p>
}
else
{
    <select @onchange="ChangeSegment">
        @foreach (var segment in segments)
        {
            <option value="@segment.Id" selected="@(segment.Id == this.segment)">@segment.Label</option>
        }
    </select>
    <SegmentTimes Segment=segment FromTime=DateTimeOffset.Now.Date />
}

@code {
    [Parameter]
    public long? SegmentId { get; set; }
    private Segment[] segments;
    private long segment;

    protected override void OnParametersSet()
    {
        if (SegmentId.HasValue && SegmentId.Value != segment)
        {
            segment = SegmentId.Value;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        segments = await Http.GetFromJsonAsync<Segment[]>("/segments");
        segment = segments.First().Id;
    }

    private void ChangeSegment(ChangeEventArgs e)
    {
        var selected = long.Parse(e.Value.ToString());
        NavigationManager.NavigateTo($"segmenttimes/{selected}");
    }
}