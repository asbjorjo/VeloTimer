@page "/track/segmenttimes/{Label}"
@layout MainLayout
@using VeloTimer.Shared.Models
@inject NavigationManager NavigationManager
@inject IApiClient Api
@inject HttpClient Http

<h3>Passeringstider</h3>

@if (segments == null)
{
    <p>Laster...</p>
}
else
{
    <select @onchange="ChangeSegment">
        @foreach (var segment in segments)
        {
            <option value="@segment.StatisticsItem.Label" selected="@(segment.StatisticsItem.Label == this.label)">@segment.StatisticsItem.Label</option>
        }
    </select>
    <SegmentTimes Segment=label FromTime=DateTimeOffset.Now.Date.AddHours(-24) Count=100 />
}

@code {
    [Parameter]
    public string Label { get; set; }
    private IEnumerable<TrackStatisticsItem> segments;
    private string label;

    protected override void OnParametersSet()
    {
        if (Label != null && Label != label)
        {
            label = Label;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        segments = await Api.GetStatisticsItems("1");
        label = segments.First().StatisticsItem.Label;
    }

    private void ChangeSegment(ChangeEventArgs e)
    {
        var selected = e.Value.ToString();
        NavigationManager.NavigateTo($"track/segmenttimes/{selected}");
    }
}