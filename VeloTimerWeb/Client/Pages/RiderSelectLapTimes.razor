@page "/rider/segmenttimes"
@page "/rider/segmenttimes/{Label}"
@layout MainLayout
@using VeloTimer.Shared.Models
@inject NavigationManager NavigationManager
@inject IApiClient Api
@inject HttpClient Http

<h3>Mine passeringstider</h3>

@if (_rider == null)
{
    <p>Laster...</p>
}
else
{
    <SegmentTimes Label="@_label" FromTime=DateTimeOffset.MinValue Count=100 Rider=@_rider />
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    [Parameter]
    public string Label { get; set; }

    private IEnumerable<TrackStatisticsItem> segments;
    private string _label;
    private string _rider;

    protected override void OnParametersSet()
    {
        if (Label != null && _label != Label)
        {
            _label = Label;
        }

        base.OnParametersSet();
    }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        _rider = user.FindFirst(c => c.Type == "sub")?.Value;
    }

    private void ChangeSegment(string segment)
    {
        var selected = segment;
        NavigationManager.NavigateTo($"rider/segmenttimes/{selected}");
    }
}
