@page "/admin/transponders"
@attribute [Authorize(Roles = "Admin")]

@using Microsoft.AspNetCore.Authorization
@using VeloTimer.Shared.Util
@using VeloTimer.Shared.Models
@layout MainLayout
@inject IApiClient Api
@inject ISnackbar SnackBar

<MudContainer>
    <MudTable ServerData="@LoadTransponders" T="TransponderOwnershipWeb" Breakpoint="Breakpoint.None" OnRowClick="@ToggleEdit" @ref="_table">
        <HeaderContent>
            <MudTh><MudTableSortLabel T="TransponderOwnershipWeb" SortLabel="transponderlabel">Transponder</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="TransponderOwnershipWeb" SortLabel="ridername">Eier</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="TransponderOwnershipWeb" SortLabel="ownedfrom">Gyldig fra</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="TransponderOwnershipWeb" SortLabel="owneduntil">Gyldig til</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate Context="transpondername">
            <MudTd>@transpondername.Transponder.Label</MudTd>
            <MudTd>@transpondername.Owner.RiderLastName, @transpondername.Owner.RiderFirstName</MudTd>
            <MudTd>@transpondername.OwnedFrom.LocalDateTime.ToShortDateString()</MudTd>
            <MudTd>@transpondername.OwnedUntil.LocalDateTime.ToShortDateString()</MudTd>
        </RowTemplate>
        <ChildRowContent Context="transpondername">
            @if (@transpondername.ShowEdit)
            {
                <MudTr>
                    <MudTd UserAttributes="@(new Dictionary<string, object>{{"colspan","3"}})">
                        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete"
                            OnClick="@(() => RemoveRegistration(transpondername))">
                            Slett
                        </MudButton>
                    </MudTd>
                </MudTr>
            }
        </ChildRowContent>
        <LoadingContent>
            <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large"/>
        </LoadingContent>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</MudContainer>

@code {
    private MudTable<TransponderOwnershipWeb> _table;

    private async Task<TableData<TransponderOwnershipWeb>> LoadTransponders(TableState state)
    {
        var pagination = new PaginationParameters
        {
            PageNumber = state.Page + 1,
            PageSize = state.PageSize
        };

        var transponderData = await Api.GetTransponderOwners(pagination);

        return new TableData<TransponderOwnershipWeb> { TotalItems = transponderData.Pagination.TotalCount, Items = transponderData.Items };
    }

    private void ToggleEdit(TableRowClickEventArgs<TransponderOwnershipWeb> transponderName)
    {
        transponderName.Item.ShowEdit = !transponderName.Item.ShowEdit;
    }

    private async void RemoveRegistration(TransponderOwnershipWeb transponderOwnership)
    {
        await Api.RemoveTransponderRegistration(transponderOwnership);

        SnackBar.Add($"Slettet registrering for brikke {transponderOwnership.Transponder.Label}", MudBlazor.Severity.Error);

        await _table.ReloadServerData();
    }
}