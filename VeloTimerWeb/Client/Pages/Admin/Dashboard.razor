@page "/admin/dashboard"
@attribute [Authorize(Roles = "Admin")]

@using Microsoft.AspNetCore.Authorization
@using VeloTimer.Shared.Util
@using VeloTimer.Shared.Models
@layout MainLayout
@inject IApiClient Api

<MudContainer>
    <MudGrid>
        <MudItem xs=12>
            <MudCard>
                <MudCardHeader>
                    <MudText Typo=Typo.h6>Aktivitet</MudText>
                </MudCardHeader>
                <MudCardContent>
                    @if (model != null)
                    {
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@lapseries" XAxisLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 200, MaxNumYAxisTicks = 10})" />
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@riderseries" XAxisLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 5, MaxNumYAxisTicks = 10})" />
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private AdminDashboardModel model;
    private List<ChartSeries> lapseries = new();
    private List<ChartSeries> riderseries = new();
    private string[] labels;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        model = await Api.GetAdminDashboardModel();

        lapseries.Add(new ChartSeries { Name = "Runder", Data = model.LapCounts.ToArray() });
        riderseries.Add(new ChartSeries { Name = "Ryttere", Data = model.RiderCounts.ToArray() });
        labels = model.Labels.Select((x, idx) => idx % 5 == 0 ? x.LocalDateTime.ToShortDateString() : string.Empty).ToArray();
    }
}
