@page "/admin/dashboard"
@attribute [Authorize(Roles = "Admin")]

@using Microsoft.AspNetCore.Authorization
@using VeloTimer.Shared.Util
@using VeloTimer.Shared.Models
@layout MainLayout
@inject IApiClient Api

<MudContainer>
    <MudGrid>
    @if (model != null)
    {
        <MudItem>
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Bane</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem>
                            Runder
                        </MudItem>
                        <MudItem>
                            @model.LapCount
                        </MudItem>
                        <MudItem>
                            Passinger
                        </MudItem>
                        <MudItem>
                            @model.PassingCount
                        </MudItem>
                    </MudGrid>
                    <MudChart Height="300" ChartType="ChartType.Bar" ChartSeries="@lapseries" XAxisLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 200, MaxNumYAxisTicks = 10})" />
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem>
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Brukere</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem>
                            Ryttere
                        </MudItem>
                        <MudItem>
                            @model.RiderCount
                        </MudItem>
                        <MudItem>
                            Med brikke
                        </MudItem>
                        <MudItem>
                            @model.RiderWithTransponderCount
                        </MudItem>
                        <MudItem>
                            Med offentlig profil
                        </MudItem>
                        <MudItem>
                            @model.RiderPublicCount
                        </MudItem>
                    </MudGrid>
                    <MudChart Height="300" ChartType="ChartType.Bar" ChartSeries="@riderseries" XAxisLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 5, MaxNumYAxisTicks = 10})" />
                </MudCardContent>
            </MudCard>
        </MudItem>
        @*<MudPaper>
                <MudChart ChartType="ChartType.Donut" InputData="@(model.LapCounts.ToArray())" InputLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 200, MaxNumYAxisTicks = 10})" />
                <MudChart ChartType="ChartType.Donut" InputData="@(model.RiderCounts.ToArray())" InputLabels="@labels" ChartOptions="@(new ChartOptions{YAxisTicks = 200, MaxNumYAxisTicks = 10})" />
        </MudPaper>*@
    }
    </MudGrid>
</MudContainer>

@code {
    private AdminDashboardModel model;
    private List<ChartSeries> series = new();
    private List<ChartSeries> lapseries = new();
    private List<ChartSeries> riderseries = new();
    private string[] labels;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        model = await Api.GetAdminDashboardModel();

        lapseries.Add(new ChartSeries { Name = "Runder siste 30 dager", Data = model.LapCounts.ToArray() });
        riderseries.Add(new ChartSeries { Name = "Ryttere siste 30 dager", Data = model.RiderCounts.ToArray() });
        series.AddRange(lapseries.Concat(riderseries));
        labels = model.Labels.Select((x, idx) => idx%5==0 ? x.LocalDateTime.ToShortDateString() : string.Empty).ToArray();
    }
}
